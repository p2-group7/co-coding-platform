generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int              @id @default(autoincrement())
  username  String           @unique
  password  String
  groupId   Int
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  group     Group            @relation(fields: [groupId], references: [id])
  courses   UsersOnCourses[]

  @@index([username])
}

model Group {
  id        Int      @id @default(autoincrement())
  name      String
  roomId    String   @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  members   User[]

  @@index([name])
}

model Course {
  id          Int              @id @default(autoincrement())
  name        String
  abrev       String
  description String?
  lectures    Lecture[]
  users       UsersOnCourses[]
}

model UsersOnCourses {
  userId   Int
  courseId Int
  course   Course @relation(fields: [courseId], references: [id])
  user     User   @relation(fields: [userId], references: [id])

  @@id([userId, courseId])
}

model Lecture {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  courseId    Int
  exercises   Exercise[]
  course      Course     @relation(fields: [courseId], references: [id])
}

model Exercise {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  lectureId   Int
  lecture     Lecture @relation(fields: [lectureId], references: [id])
  tests       Test[]
}

model Test {
  id         Int      @id @default(autoincrement())
  name       String
  exerciseId Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  input      String
  output     String
}
